version: "3.9"

services:

  api-gateway:
    image: api-gateway
    container_name: api-gateway
    hostname: api-gateway
    build:
      context: ./api-gateway/
      dockerfile: Dockerfile
    restart: always
    environment: 
      TOUR_SERVICE_ADDRESS: tour-service:8000
      ENCOUNTER_SERVICE_ADDRESS: encounter-service:8001
      STAKEHOLDERS_SERVICE_ADDRESS: stakeholders-service:7999
      GATEWAY_ADDRESS: ":44333"
    depends_on:
      - tour-service
      - stakeholders-service
    networks:
      - network
    ports:
      - "44333:44333"
    expose:
      - "8000:8000"
      - "8001:8001"
      - "7999:7999"

  tour-service:
    image: tour-service
    container_name: tour-service
    hostname: tour-service
    build:
      context: ./golang-be/Tours/
    restart: on-failure
    networks:
      - network
    depends_on:
      - mongo
    environment:
      DATABASE_URL: mongodb://root:jemta@mongo:27017/
      TOUR_SERVICE_ADDRESS: tour-service:8000


  encounter-service:
    image: encounter-service
    container_name: encounter-service
    hostname: encounter-service
    build:
      context: ./golang-be/Encounters/
    restart: on-failure
    networks:
      - network
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL_1: host=db user=postgres password=super dbname=explorer port=5433 sslmode=disable
      ENCOUNTER_SERVICE_ADDRESS: encounter-service:8001

  stakeholders-service:
    image: stakeholders-service
    container_name: stakeholders-service
    hostname: stakeholders-service
    build:
      context: ./golang-be/Stakeholders/

    restart: on-failure
    networks:
      - network
    depends_on:
      - mongo
    environment:
      DATABASE_URL: mongodb://root:jemta@mongo:27017/
      STAKEHOLDERS_SERVICE_ADDRESS: stakeholders-service:7999

  mongo:
    image: mongo
    restart: always
    networks: 
     - network
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: jemta
      MONGO_INITDB_DATABASE: tour
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    restart: always
    networks:
      - network
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: jemta
      ME_CONFIG_MONGODB_URL: mongodb://root:jemta@mongo:27017/
      ME_CONFIG_BASICAUTH: false
     
  db:
    image: postgres:latest
    restart: always
    networks:
      - network
    ports:
      - "5433:5433"
    volumes:
      - ./db_init.sh:/docker-entrypoint-initdb.d/db_init.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: super
      POSTGRES_MULTIPLE_DATABASES: tour,explorer,blogs
      PGPORT: 5433

networks:
  network:
    driver: bridge